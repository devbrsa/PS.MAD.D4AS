// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PS.MAD.D4AS.DataAccess;

namespace PS.MAD.D4AS.DataAccess.Migrations
{
    [DbContext(typeof(TicketingContext))]
    partial class TicketingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PS.MAD.D4AS.DataAccess.Model.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnalyserDescription");

                    b.Property<string>("Name");

                    b.Property<double>("Priority");

                    b.Property<string>("StorageLocation");

                    b.Property<Guid>("TicketId");

                    b.Property<string>("UserDescription");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PS.MAD.D4AS.DataAccess.Model.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfAccident");

                    b.Property<string>("Description");

                    b.Property<double>("Priority");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("PS.MAD.D4AS.DataAccess.Model.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AnalyserDescription");

                    b.Property<string>("Name");

                    b.Property<double>("Priority");

                    b.Property<Guid>("TicketId");

                    b.Property<string>("UserDescription");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("PS.MAD.D4AS.DataAccess.Model.Image", b =>
                {
                    b.HasOne("PS.MAD.D4AS.DataAccess.Model.Ticket", "Ticket")
                        .WithMany("Images")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PS.MAD.D4AS.DataAccess.Model.Video", b =>
                {
                    b.HasOne("PS.MAD.D4AS.DataAccess.Model.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
